<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Linluochen丶Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://linluochen.cn/"/>
  <updated>2019-07-24T09:40:40.931Z</updated>
  <id>http://linluochen.cn/</id>
  
  <author>
    <name>林洛尘</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>初来乍到的洛尘</title>
    <link href="http://linluochen.cn/2019/06/11/hello-world/"/>
    <id>http://linluochen.cn/2019/06/11/hello-world/</id>
    <published>2019-06-11T03:50:39.000Z</published>
    <updated>2019-07-24T09:40:40.931Z</updated>
    
    <content type="html"><![CDATA[<h2 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h2><p>&ensp;&ensp;&ensp;&ensp;我呢，是一个。。额。。咋形容呢，就是。。是一个偶尔发呆偶尔犯傻的一个孩子，今年呢 18 岁，嘿嘿，进入 IT 行业也已经一年多了，在没进来，这个行业之前觉得，哇塞，这个行业真的很神奇，很有神秘感，但是事实告诉我以上仅限想象行为。<a id="more"></a><br>&ensp;&ensp;&ensp;&ensp;其实因为年龄问题，我受到过很多的质疑，咱也不知道年龄和技术有啥关系，咱也不敢问。当时求职的时候就感觉超级沮丧，因为受到很多的”打击”，曾经也一度想过放弃，但是吧，放弃又很不甘心，幸好皇天不负有心人，让我幸运的进入到了第一家公司，当时进去的时候真的是特别特别的认真学，大概就是上班吸收不了的知识晚上下班回家继续吸收，一天有二十四小时，真的是除了睡觉的时候，其余时间都是在学习，当然，我的努力也没有白费。<br>&ensp;&ensp;&ensp;&ensp;在入职的第三个月的时候，我负责带一个项目，那是我第一次带领做项目，但是的心情吧，就是，咋说呢，很复杂！！一方面是激动，一方面是害怕，害怕是因为，我害怕让信任我的人失望，激动是因为，这种机会给了一个刚入职的菜鸟，主管都这么信任我了，如果我再让他失望，我觉得我真的就太失败了。我是个很感性的人，就是那种，别人对我好信任我，我就会百分之二百的回报给他的那种。<br>&ensp;&ensp;&ensp;&ensp;在这个公司，我遇到了很多暖心的哥哥，其实职场上也没有那么”恐怖”，以前没进入社会的时候，都说怎么怎么样怎么怎么样，但是这种事情也只有亲身体验了才会知道，反正我感觉我很幸运，遇到的都是很贴心很暖的哥哥们（感觉以前就是电视剧看多了，给“吓”得），虽然偶尔毒舌，偶尔调皮！！但是我向他们请教问题，重来都不会说是不给讲，态度不好什么什么的，我们偶尔也会打闹，后来因为某些事情跳槽了。<br>&ensp;&ensp;&ensp;&ensp;第二家公司其实也是朋友推荐才去的，刚开始的时候他们都感觉，哇，好小的小孩子，后来开始慢慢相处，从哥哥玩成朋友，记得听他们说的最多的一句话就是，我从来没有想过会和 00 后玩的那么好，后来曾经有一点时间特别想学习 Linux 但是由于自身条件不是很优秀，脑子有点笨，学了一段时间，感觉好难，然后公司里的运维哥哥就过来趁下班的时候帮我学习 Linux 真的特别特别感动，虽然每次教我的时候都喜欢’凶’我！！其实现在回想起来还是会忍不住的想要笑，记得他当时一直和我玩游戏还和女朋友发生过’争执’虽然我吃了不少狗粮 T_T||<br>&ensp;&ensp;&ensp;&ensp;我不知道其他人的路是什么样子的，但是我觉得我真的是非常幸运了，每次遇到的人都很好，也许曾经会发生一些不愉快的事情，但是在我心里还是和他们的友情高于一切，当时走的时候，记得我一个很好的哥哥还给我发了一段朋友圈说，祝我以后有酒有肉有姑娘，想得到的都会得到，真的是给我差点感动哭了，一瞬间就是那种千言万语堵在了喉咙的感觉，什么话都说不出来，到了现在也很想念他们，但是每个人都有自己的路要走，虽然感谢和他们相遇，但是却不会再回去了，只期待后面有缘在相遇。<br>&ensp;&ensp;&ensp;&ensp;我没有多么华丽的语言来形用我这不算精彩的精彩人生，虽然我不信命，但是我依旧很感谢幸运女神给我的照顾，依旧感谢与这些哥哥的相遇。其实这篇文章，并没有写一些关于工作的事情，写的相当于这一年多的缩影吧，经历了很多也成长了很多，开心过，高兴过，也颓废过，但是不管怎么样，都要做最好的自己的，坚信一句话，不忘初心，方得始终！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;自我介绍&quot;&gt;&lt;a href=&quot;#自我介绍&quot; class=&quot;headerlink&quot; title=&quot;自我介绍&quot;&gt;&lt;/a&gt;自我介绍&lt;/h2&gt;&lt;p&gt;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;我呢，是一个。。额。。咋形容呢，就是。。是一个偶尔发呆偶尔犯傻的一个孩子，今年呢 18 岁，嘿嘿，进入 IT 行业也已经一年多了，在没进来，这个行业之前觉得，哇塞，这个行业真的很神奇，很有神秘感，但是事实告诉我以上仅限想象行为。
    
    </summary>
    
      <category term="linluochen" scheme="http://linluochen.cn/categories/linluochen/"/>
    
    
      <category term="linluochen" scheme="http://linluochen.cn/tags/linluochen/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot 实战 ：入门篇</title>
    <link href="http://linluochen.cn/2019/06/11/index/"/>
    <id>http://linluochen.cn/2019/06/11/index/</id>
    <published>2019-06-11T03:50:39.000Z</published>
    <updated>2019-08-15T06:45:37.337Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><h3 id="先说一下啥是-Spring-Boot"><a href="#先说一下啥是-Spring-Boot" class="headerlink" title="先说一下啥是 Spring Boot ?"></a>先说一下啥是 Spring Boot ?</h3><p>&ensp;&ensp;&ensp;&ensp;Spring Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。Spring Boot 并不是用来替代 Spring 的解决方案，而是和 Spring 框架紧密结合用于提升 Spring 开发者体验的工具。<a id="more"></a>同时它集成了大量常用的第三方库配置，Spring Boot应用中这些第三方库几乎可以是零配置的开箱即用（out-of-the-box），大部分的 Spring Boot 应用都只需要非常少量的配置代码（基于 Java 的配置），开发者能够更加专注于业务逻辑。（虽然我觉得写这个没多大意义吧。。但是还是要科普一下）</p><h3 id="Spring-Boot-优势有哪些-（反正就是各种简化）"><a href="#Spring-Boot-优势有哪些-（反正就是各种简化）" class="headerlink" title="Spring Boot 优势有哪些 ? （反正就是各种简化）"></a>Spring Boot 优势有哪些 ? （反正就是各种简化）</h3><p>&ensp;&ensp;&ensp;&ensp;1.创建独立的Spring应用程序<br>&ensp;&ensp;&ensp;&ensp;2. 嵌入的Tomcat，无需部署WAR文件<br>&ensp;&ensp;&ensp;&ensp;3. 简化Maven配置<br>&ensp;&ensp;&ensp;&ensp;4. 自动配置Spring<br>&ensp;&ensp;&ensp;&ensp;5. 提供生产就绪型功能，如指标，健康检查和外部配置<br>&ensp;&ensp;&ensp;&ensp;6. 绝对没有代码生成并且对XML也没有配置要求</p><p>介绍到此结束，下面进入正题！！</p><hr><p><strong>因为网上的许多部署的 Spring Boot 版本都有错误，所以呢，这里我们就简单的整合了一下，实话实说，博主也是第一次搭建 Boot 如有不足，请留言补充，先说一下我们的环境：</strong><br>&ensp;&ensp;&ensp;&ensp;首先说一下，我们这地方用的 Tk_MyBatis 其实就是 MyBatis ，只不过是把一些简单方法给封装了一下 类似于 Jpa </p><h3 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h3><h4 id="第一步创建项目"><a href="#第一步创建项目" class="headerlink" title="第一步创建项目"></a>第一步创建项目</h4><p><strong>开发环境 ：</strong>JDK1.8 – IDEA 2018.3  – MyBatis<br><strong>首先，搭建 Spring Boot 项目，这些地方我们就简单的写一下。。不做过多解释，我们主要看功能，以及可能会爆出的错误信息</strong><br><strong>点击 File – New – Project 选择 Spring Initializr 默认 jdk 1.8 然后 Next 下图中红色标记的</strong><br><img src="https://img-blog.csdnimg.cn/20190505141223252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NTM3NTQ2,size_16,color_FFFFFF,t_70" alt></p><p><strong>这个就根据喜好定义就行了。。个人练习的话不是很重要（仅代表个人意见</strong>）<br><img src="https://img-blog.csdnimg.cn/20190505141738351.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NTM3NTQ2,size_16,color_FFFFFF,t_70" alt></p><p><strong>因为这个地方我们只是实现简单的增删改查，所以就选择几个能用到的就好了</strong><br><img src="https://img-blog.csdnimg.cn/20190505141954826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NTM3NTQ2,size_16,color_FFFFFF,t_70" alt></p><p><strong>最后输入我们的项目名称</strong><br><img src="https://img-blog.csdnimg.cn/20190505142227567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NTM3NTQ2,size_16,color_FFFFFF,t_70" alt></p><p><strong>创建完成后，看一下我们的项目结构（这个是我之前搭建好的结构）</strong><br><img src="https://img-blog.csdnimg.cn/20190505144755253.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NTM3NTQ2,size_16,color_FFFFFF,t_70" alt></p><h4 id="第二步配置-Pom-xml-文件"><a href="#第二步配置-Pom-xml-文件" class="headerlink" title="第二步配置 Pom.xml 文件"></a>第二步配置 Pom.xml 文件</h4><p><strong>首先打开我们的 Pom.xml 文件，需要得内容我都已经贴在了下方，可以看看你们那些没有：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;project xmlns=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">     xsi:schemaLocation=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span><br><span class="line">&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">&lt;parent&gt;</span><br><span class="line">    &lt;!-- 声明此工程是一个Spring Boot 应用 --&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;&lt;!-- 是一个很特殊的starter用来提供相关Maven默认的依赖，使用它后可以省略常用包的version --&gt;</span><br><span class="line">    &lt;version&gt;2.1.4.RELEASE&lt;/version&gt; &lt;!-- 版本号 --&gt;</span><br><span class="line">    &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">&lt;/parent&gt;</span><br><span class="line">&lt;groupId&gt;com.cs&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;mybatis&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">&lt;name&gt;mybatis&lt;/name&gt;</span><br><span class="line">&lt;description&gt;Demo project <span class="keyword">for</span> Spring Boot&lt;/description&gt;</span><br><span class="line"> </span><br><span class="line">&lt;properties&gt; &lt;!-- JDK 版本 --&gt;</span><br><span class="line">    &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">&lt;/properties&gt;</span><br><span class="line"> </span><br><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;&lt;!-- Thymeleaf 模板引擎 --&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;dependency&gt;&lt;!-- 因为我们搭建的是 Web 应用 引用依赖 --&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;&lt;!-- Web 开发支持 默认使用 Tomcat 8 --&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;dependency&gt;&lt;!-- MyBatis 依赖 --&gt;</span><br><span class="line">        &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.0.1&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;dependency&gt; &lt;!--Mybatis与SpringBoot的集成依赖--&gt;</span><br><span class="line">        &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.1.1&lt;/version&gt;</span><br><span class="line">        &lt;exclusions&gt;</span><br><span class="line">            &lt;exclusion&gt;</span><br><span class="line">                &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;</span><br><span class="line">                &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</span><br><span class="line">            &lt;/exclusion&gt;</span><br><span class="line">        &lt;/exclusions&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;dependency&gt;&lt;!--Mybatis与Spring的集成依赖--&gt;</span><br><span class="line">        &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;dependency&gt;&lt;!-- MySQL 连接数据库的驱动程序 --&gt;</span><br><span class="line">        &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">        &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;dependency&gt;&lt;!-- 这个依赖和测试相关，只要引入它，就会把所有与测试相关的包全部引入 --&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">        &lt;scope&gt;<span class="built_in">test</span>&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;dependency&gt;&lt;!-- 热部署 --&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">        &lt;optional&gt;<span class="literal">true</span>&lt;/optional&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;dependency&gt;&lt;!-- tk_MyBatis --&gt;</span><br><span class="line">        &lt;groupId&gt;tk.mybatis&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mapper-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;tk.mybatis&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mapper&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;4.0.0&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;dependency&gt;&lt;!-- log4j 日志 --&gt;</span><br><span class="line">        &lt;groupId&gt;log4j&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;log4j&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.2.17&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;dependency&gt;&lt;!-- Tool 工具类 --&gt;</span><br><span class="line">        &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;gson&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.8.5&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.jdom&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jdom2&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.0.6&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"> </span><br><span class="line">&lt;/dependencies&gt;</span><br><span class="line"> </span><br><span class="line">&lt;build&gt;</span><br><span class="line">    &lt;plugins&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">    &lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br><span class="line"> </span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure></p><h4 id="第三步配置-application-properties-文件"><a href="#第三步配置-application-properties-文件" class="headerlink" title="第三步配置 application.properties 文件"></a>第三步配置 application.properties 文件</h4><p><strong>这个地方也有朋友喜欢用 yml 但是不巧这里就先只配置了 application.properties 的</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自定义端口号 默认为 8080</span></span><br><span class="line">server.port = 8080</span><br><span class="line"><span class="comment"># 添加 MySQL 数据库配置 127.0.0.1 作用和 localhost 一样</span></span><br><span class="line">spring.datasource.url=jdbc:mysql://127.0.0.1:3306/boot_dome?serverTimezone=UTC&amp;characterEncoding=UTF-8&amp;useUnicode=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 用户名</span></span><br><span class="line">spring.datasource.username=root</span><br><span class="line"><span class="comment"># 密码</span></span><br><span class="line">spring.datasource.password=root</span><br><span class="line"><span class="comment"># 驱动</span></span><br><span class="line">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver</span><br><span class="line"><span class="comment"># Thymeleaf 配置 模板支持 HTML XML Text JavaScript</span></span><br><span class="line">spring.thymeleaf.mode=HTML5</span><br><span class="line"><span class="comment"># 编码，可不用配置</span></span><br><span class="line">spring.thymeleaf.encoding=utf-8</span><br><span class="line"><span class="comment"># 内容类别，可不用配置</span></span><br><span class="line">spring.thymeleaf.content-type=text/html</span><br><span class="line"><span class="comment"># 开发配置为 false 避免修改模板还要重启服务器</span></span><br><span class="line">spring.thymeleaf.cache=<span class="literal">false</span></span><br><span class="line"><span class="comment"># 配置模板路径，默认是 templates 可以不用配置</span></span><br><span class="line">spring.thymeleaf.prefix=classpath:/templates</span><br></pre></td></tr></table></figure></p><p><strong>这俩都配置好了之后，最起码可以保证项目能运行了。。哦哦哦不对。。还有一个地方</strong></p><h4 id="第四步配置主类加载文件"><a href="#第四步配置主类加载文件" class="headerlink" title="第四步配置主类加载文件"></a>第四步配置主类加载文件</h4><p><strong>也是最重要的一部分！！！就是我们项目的主类！！一般新建的项目是这个样子的</strong><br><img src="https://img-blog.csdnimg.cn/20190505150912854.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NTM3NTQ2,size_16,color_FFFFFF,t_70" alt><br><strong>然后我们再给他加上几个注解：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@ComponentScan(basePackages = <span class="string">"com.cs.mybatis.*"</span>) // 扫描主程序文件</span><br><span class="line">@MapperScan(<span class="string">"com.cs.mybatis.mapper"</span>) // 扫描这个包下的 Mapper 文件</span><br><span class="line">@ServletComponentScan // 使用该注解后，Servlet Filter Listener 可以直接通过</span><br></pre></td></tr></table></figure></p><p><img src="https://img-blog.csdnimg.cn/20190505150737295.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NTM3NTQ2,size_16,color_FFFFFF,t_70" alt></p><h4 id="第五步创建测试类测试运行"><a href="#第五步创建测试类测试运行" class="headerlink" title="第五步创建测试类测试运行"></a>第五步创建测试类测试运行</h4><p><strong>新建建一个测试类，测试一下是否可以访问成功，写好测试方法之后，点击右上角绿色的三角按钮启动，上边也介绍了，SpringBoot 有内置的 Tomcat 所以不用我们来配置</strong><br><img src="https://img-blog.csdnimg.cn/20190505152903603.png" alt><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">   /**</span><br><span class="line"> * @ClassName TestController</span><br><span class="line"> * @Author linluochen</span><br><span class="line"> * @Date 2019/4/19 16:09</span><br><span class="line"> * @Version 1.0</span><br><span class="line"> **/</span><br><span class="line">@Controller // 声明这是一个 Controller 表示此类用于负责处理 Web 请求</span><br><span class="line">public class TestController &#123;</span><br><span class="line">    @RequestMapping(<span class="string">"Test"</span>) // 如果参数链接的请求的参数相同则调用此方法</span><br><span class="line">    @ResponseBody // 表示这个的返回值只一个文本不是一个视图路径  通常用于接收 AJAX 请求</span><br><span class="line">    public String <span class="function"><span class="title">Test</span></span>()&#123;</span><br><span class="line">        System.out.println(<span class="string">"来了老弟？"</span>);</span><br><span class="line">        <span class="built_in">return</span> <span class="string">"Hello World"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>页面输出结果为，同时查看控台也会有提示，这里就不贴图了。。</p><p><img src="https://img-blog.csdnimg.cn/20190505153015762.png" alt></p><p><strong>到这里，第一部分搭建项目就算完成了下面就是集成 MyBatis 进行增删改查</strong></p><hr><h3 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h3><h4 id="第一步创建新的包"><a href="#第一步创建新的包" class="headerlink" title="第一步创建新的包"></a>第一步创建新的包</h4><p><strong>首先我们右键 New 一个 Package 包</strong></p><p><img src="https://img-blog.csdnimg.cn/20190505153610674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NTM3NTQ2,size_16,color_FFFFFF,t_70" alt></p><p><strong>然后创建好，model，mapper，service，serviceimpl 大概结构就是这个样子</strong><br><strong>model 用来存放实体类</strong><br><strong>mapper 和 service 用来放接口</strong><br><strong>serviceimpl 业务逻辑层，简单来说就是实现接口业务的地方</strong></p><p><img src="https://img-blog.csdnimg.cn/20190505153726753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NTM3NTQ2,size_16,color_FFFFFF,t_70" alt></p><h4 id="第二步创建新的表"><a href="#第二步创建新的表" class="headerlink" title="第二步创建新的表"></a>第二步创建新的表</h4><p><strong>首先，现在数据库创建一个表，表名可以随意，也可以跟着本教程：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table teacher(</span><br><span class="line">  id int(11) primary key auto_increment, // 主键，自增</span><br><span class="line">  name varchar(30) ,</span><br><span class="line">  age int(11)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><h4 id="第三步创建-Model-层"><a href="#第三步创建-Model-层" class="headerlink" title="第三步创建 Model 层"></a>第三步创建 Model 层</h4><p><strong>然后创建 Model 层，这个地方我们可以反向生成得，博主文中也有反向生成工具：</strong><br><strong>附上反向工具使用教程以及下载地址：</strong><a href="https://blog.csdn.net/qq_36537546/article/details/88706684" target="_blank" rel="noopener">https://blog.csdn.net/qq_36537546/article/details/88706684</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">package com.cs.mybatis.model;</span><br><span class="line"> </span><br><span class="line">import java.io.Serializable;</span><br><span class="line">import javax.persistence.Column;</span><br><span class="line">import javax.persistence.Id;</span><br><span class="line">import javax.persistence.Table;</span><br><span class="line"> </span><br><span class="line">import lombok.Data;</span><br><span class="line">import lombok.EqualsAndHashCode;</span><br><span class="line"> </span><br><span class="line">@Data</span><br><span class="line">@EqualsAndHashCode(callSuper=<span class="literal">false</span>)</span><br><span class="line">@Table(name=<span class="string">"teacher"</span>) // 数据库名对应</span><br><span class="line">public class Teacher implements Serializable &#123;</span><br><span class="line"> </span><br><span class="line">// 序列化</span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line">/**</span><br><span class="line"> * ID</span><br><span class="line"> */</span><br><span class="line">@Id // 声明主键</span><br><span class="line">@Column(name = <span class="string">"id"</span>) // 与数据库字段名对应</span><br><span class="line">private Integer id;</span><br><span class="line">/**</span><br><span class="line"> * 名字</span><br><span class="line"> */</span><br><span class="line">@Column(name = <span class="string">"name"</span>)</span><br><span class="line">private String name;</span><br><span class="line">/**</span><br><span class="line"> * 年龄</span><br><span class="line"> */</span><br><span class="line">@Column(name = <span class="string">"age"</span>)</span><br><span class="line">private Integer age;</span><br><span class="line"> </span><br><span class="line">public <span class="function"><span class="title">Teacher</span></span>()&#123;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">public Teacher(</span><br><span class="line">Integer id</span><br><span class="line">)&#123;</span><br><span class="line">this.id = id;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">public void setId(Integer id) &#123;</span><br><span class="line">this.id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Integer <span class="function"><span class="title">getId</span></span>() &#123;</span><br><span class="line"><span class="built_in">return</span> this.id;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">public void setName(String name) &#123;</span><br><span class="line">this.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String <span class="function"><span class="title">getName</span></span>() &#123;</span><br><span class="line"><span class="built_in">return</span> this.name;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">public void setAge(Integer age) &#123;</span><br><span class="line">this.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Integer <span class="function"><span class="title">getAge</span></span>() &#123;</span><br><span class="line"><span class="built_in">return</span> this.age;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="第四步创建-Mapper-层"><a href="#第四步创建-Mapper-层" class="headerlink" title="第四步创建 Mapper 层"></a>第四步创建 Mapper 层</h4><p><strong>Mapper 层，这个地方我们集成了一下 Tk_MyBatis 相当于一个持久层 API 用过 Jpa 的朋友应该知道这个是啥意思，一般不是特别复杂的 sql 就不用在 Mapper 层写了，Tk 就可以搞定，当然如果是复杂的 sql 例如多表联合查询等还是要在Mapper操作的，如果实在不懂用法的话，可以给我留言评论，或者加我QQ，我会在最底部留下的，想了解详细用法的朋友可以看官方文档</strong><br><strong>文档地址：</strong><a href="https://github.com/abel533/Mapper/wiki/6.example" target="_blank" rel="noopener">https://github.com/abel533/Mapper/wiki/6.example</a><strong> 这里我们不做过多的介绍</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">    package com.cs.mybatis.mapper;</span><br><span class="line">     </span><br><span class="line">    import com.cs.mybatis.base.BaseMapper;</span><br><span class="line">    import com.cs.mybatis.model.Teacher;</span><br><span class="line">    import org.springframework.stereotype.Component;</span><br><span class="line">     </span><br><span class="line">    @Component</span><br><span class="line">    public interface TeacherMapper extends BaseMapper&lt;Teacher&gt; &#123; // 这个地方我们调用的 Tk_MyBatis 持久层 API</span><br><span class="line">    &#125;</span><br><span class="line">``` </span><br><span class="line"><span class="comment">#### 第五步创建 Server 层</span></span><br><span class="line">**Service 层，这个就照常写就可以了**</span><br><span class="line">``` bash</span><br><span class="line">    /*</span><br><span class="line">     * Powered By [rapid-framework]</span><br><span class="line">     * Web Site: http://www.rapid-framework.org.cn</span><br><span class="line">     * Google Code: http://code.google.com/p/rapid-framework/</span><br><span class="line">     */</span><br><span class="line">     </span><br><span class="line">    package com.cs.mybatis.service;</span><br><span class="line">     </span><br><span class="line">    import com.cs.mybatis.model.Teacher;</span><br><span class="line">     </span><br><span class="line">    import java.util.List;</span><br><span class="line">     </span><br><span class="line">    public interface TeacherService&#123;</span><br><span class="line">     </span><br><span class="line">    /**</span><br><span class="line">     * @title: 查询全部</span><br><span class="line">     * @auther: linluochen</span><br><span class="line">     * @date: 2019/5/5 10:28</span><br><span class="line">     */</span><br><span class="line">    List&lt;Teacher&gt; selectAll();</span><br><span class="line">     </span><br><span class="line">    /**</span><br><span class="line">     * @title:  增加</span><br><span class="line">     * @param: teacher</span><br><span class="line">     * @auther: linluochen</span><br><span class="line">     * @date: 2019/5/5 10:30</span><br><span class="line">     */</span><br><span class="line">    Integer insertSelective(Teacher teacher);</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">``` </span><br><span class="line">**ServiceImpl 实现类，这个地方调用我们的 Mapper 虽然我们 Mapper 没有写东西，但是由于我们的 Mapper 继承了 Tk_MyBatis 里面的属性，所以可以直接调用简单的单表查询的方法**</span><br><span class="line">``` bash</span><br><span class="line">    /*</span><br><span class="line">     * Powered By [rapid-framework]</span><br><span class="line">     * Web Site: http://www.rapid-framework.org.cn</span><br><span class="line">     * Google Code: http://code.google.com/p/rapid-framework/</span><br><span class="line">     */</span><br><span class="line">     </span><br><span class="line">    package com.cs.mybatis.service.impl;</span><br><span class="line">     </span><br><span class="line">    import com.cs.mybatis.mapper.TeacherMapper;</span><br><span class="line">    import com.cs.mybatis.model.Teacher;</span><br><span class="line">    import com.cs.mybatis.service.TeacherService;</span><br><span class="line">    import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">    import org.springframework.stereotype.Service;</span><br><span class="line">     </span><br><span class="line">    import java.util.List;</span><br><span class="line">     </span><br><span class="line">    @Service</span><br><span class="line">    public class TeacherServiceImpl implements TeacherService &#123;</span><br><span class="line">     </span><br><span class="line">    @Autowired // 自动装配 Bean</span><br><span class="line">    TeacherMapper teacherMapper;</span><br><span class="line">     </span><br><span class="line">    /**</span><br><span class="line">     * @title: 查询全部</span><br><span class="line">     * @auther: linluochen</span><br><span class="line">     * @date: 2019/5/5 10:25</span><br><span class="line">     */</span><br><span class="line">    @Override</span><br><span class="line">    public List&lt;Teacher&gt; <span class="function"><span class="title">selectAll</span></span>() &#123;</span><br><span class="line">    <span class="built_in">return</span> teacherMapper.selectAll();</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    /**</span><br><span class="line">     * @title: 新增</span><br><span class="line">     * @param: teacher</span><br><span class="line">     * @auther: linluochen</span><br><span class="line">     * @date: 2019/5/5 10:25</span><br><span class="line">     */</span><br><span class="line">    @Override</span><br><span class="line">    public Integer insertSelective(Teacher teacher) &#123;</span><br><span class="line">        <span class="built_in">return</span> teacherMapper.insertSelective(teacher);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h4 id="第六步创建测试类"><a href="#第六步创建测试类" class="headerlink" title="第六步创建测试类"></a>第六步创建测试类</h4><p><strong>写完这些之后，我们去测试一下能不能用，在左侧有一个 test 文件夹，然后打开，如下图</strong></p><p><img src="https://img-blog.csdnimg.cn/20190505173243350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NTM3NTQ2,size_16,color_FFFFFF,t_70" alt></p><p><strong>打开后在里面写入要测试的方法，这个类呢，是我们的测试类，所有的可执行操作都可以在这个里面进行测试，不过多解释，注解已经写得很清楚了，然后写完之后运行我们写的测试方法，在左侧会有一个绿色的三角标志，然后点击运行</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">package com.cs.mybatis;</span><br><span class="line"> </span><br><span class="line">import com.cs.mybatis.model.Teacher;</span><br><span class="line">import com.cs.mybatis.service.TeacherService;</span><br><span class="line">import org.junit.Test;</span><br><span class="line">import org.junit.runner.RunWith;</span><br><span class="line">import org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line">import org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"> </span><br><span class="line">import javax.annotation.Resource;</span><br><span class="line">import java.util.List;</span><br><span class="line"> </span><br><span class="line">@RunWith(SpringRunner.class)</span><br><span class="line">@SpringBootTest // 声明这个是一个 TestController</span><br><span class="line">public class MybatisApplicationTests &#123;</span><br><span class="line"> </span><br><span class="line"> @Resource // 自动装配 Bean 用来调用你定义的方法</span><br><span class="line"> TeacherService teacherService;</span><br><span class="line">  </span><br><span class="line"> @Test</span><br><span class="line"> public void <span class="function"><span class="title">contextLoads</span></span>() &#123;</span><br><span class="line"> &#125;</span><br><span class="line">  </span><br><span class="line"> /**</span><br><span class="line">  * @title: boot + mybatis selectAll()</span><br><span class="line">  * @auther: linluochen</span><br><span class="line">  * @date: 2019/5/5 10:41</span><br><span class="line">  */</span><br><span class="line"> @Test // 声明这个是个 TestClass</span><br><span class="line"> public void <span class="function"><span class="title">TeacherSelectAll</span></span>()&#123;</span><br><span class="line">  List&lt;Teacher&gt; teachersList = teacherService.selectAll(); // 获取实现类的方法</span><br><span class="line">  <span class="keyword">for</span> (Teacher teacher:teachersList) &#123; // foreach 循环遍历</span><br><span class="line">  System.out.println(<span class="string">"ID："</span>+teacher.getId()+<span class="string">" "</span>+<span class="string">"姓名："</span>+teacher.getName()+<span class="string">" "</span>+<span class="string">"年龄："</span>+teacher.getAge());</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">  </span><br><span class="line"> /**</span><br><span class="line">  * @title: boot + mybatis insertSelective()</span><br><span class="line">  * @param: teacher</span><br><span class="line">  * @auther: linluochen</span><br><span class="line">  * @date: 2019/5/5 10:41</span><br><span class="line">  */</span><br><span class="line"> @Test // 声明这个是个 TestClass</span><br><span class="line"> public void <span class="function"><span class="title">TeacherInsertSelective</span></span>()&#123;</span><br><span class="line">  Teacher teacher = new Teacher(); // new 一个对象</span><br><span class="line">  teacher.setName(<span class="string">"小明"</span>); // <span class="built_in">set</span> 放值</span><br><span class="line">  teacher.setAge(16); // <span class="built_in">set</span> 放值</span><br><span class="line">  Integer thy = teacherService.insertSelective(teacher); // 调用方法 成功返回 1  失败返回 0</span><br><span class="line">  <span class="keyword">if</span>(thy == 1)&#123; // 进行判断</span><br><span class="line">  System.out.println(<span class="string">"成功"</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  System.out.println(<span class="string">"失败"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>查看我们的运行结果，可以在控制台看到我们的执行结果</strong></p><p><strong>欢迎留言评论，附赠上我们的项目链接：</strong><a href="https://download.csdn.net/download/qq_36537546/11160569" target="_blank" rel="noopener">https://download.csdn.net/download/qq_36537546/11160569</a></p>]]></content>
    
    <summary type="html">
    
      &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;h3 id=&quot;先说一下啥是-Spring-Boot&quot;&gt;&lt;a href=&quot;#先说一下啥是-Spring-Boot&quot; class=&quot;headerlink&quot; title=&quot;先说一下啥是 Spring Boot ?&quot;&gt;&lt;/a&gt;先说一下啥是 Spring Boot ?&lt;/h3&gt;&lt;p&gt;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;Spring Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。Spring Boot 并不是用来替代 Spring 的解决方案，而是和 Spring 框架紧密结合用于提升 Spring 开发者体验的工具。
    
    </summary>
    
      <category term="boot" scheme="http://linluochen.cn/categories/boot/"/>
    
    
      <category term="boot" scheme="http://linluochen.cn/tags/boot/"/>
    
  </entry>
  
</feed>
